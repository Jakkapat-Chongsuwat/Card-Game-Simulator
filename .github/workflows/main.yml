name: Android Build and Deploy to Google Play

on:
  push:
    branches:
      - android-workflow
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
  pull_request:
    branches:
      - main
    paths:
      - 'Assets/**'
      - 'Packages/**'
      - 'ProjectSettings/**'
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      workflow_mode:
        description: '[release] [Android]'
        required: false
        default: 'Android'

jobs:
  tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
      - run: |
          git lfs pull
          git add .
          git reset --hard
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-test-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
      - uses: game-ci/unity-test-runner@main
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          testMode: playmode
          githubToken: ${{ secrets.GITHUB_TOKEN }}

  buildForAndroid:
    name: Build for Android
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - uses: actions/checkout@v4
      - run: git lfs ls-files -l | cut -d' ' -f1 | sort > .lfs-assets-id
      - uses: actions/cache@v4
        id: lfs-cache
        with:
          path: .git/lfs
          key: ${{ runner.os }}-lfs-${{ hashFiles('.lfs-assets-id') }}
      - run: git lfs pull
      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-buildAndroid-Android-${{ hashFiles('Assets/**', 'Packages/**', 'ProjectSettings/**') }}
      - uses: game-ci/unity-builder@main
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          targetPlatform: Android
          androidKeystoreName: ${{ env.ANDROID_KEYSTORE_NAME }}
          androidKeystoreBase64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          androidKeystorePass: ${{ secrets.ANDROID_KEYSTORE_PASS }}
          androidKeyaliasName: ${{ env.ANDROID_KEYSTORE_NAME_ALIAS }}
          androidKeyaliasPass: ${{ secrets.ANDROID_KEYALIAS_PASS }}
          androidExportType: androidAppBundle

  deployToGooglePlay:
    name: Deploy to the Google Play Store
    runs-on: ubuntu-latest
    needs: buildForAndroid
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: cgs-Android
          path: build/Android
      - run: echo "${{ github.event.release.body }}" > fastlane/metadata/android/en-US/changelogs/default.txt
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0
          bundler-cache: true
      - name: Upload to Google Play
        env:
          GOOGLE_PLAY_KEY_FILE_PATH: ${{ format('{0}/fastlane/api-finoldigital.json', github.workspace) }}
          ANDROID_BUILD_FILE_PATH: ${{ format('{0}/build/Android/Android.aab', github.workspace) }}
          ANDROID_PACKAGE_NAME: com.finoldigital.cardgamesim
        uses: maierj/fastlane-action@v3.1.0
        with:
          lane: 'android playprod'
